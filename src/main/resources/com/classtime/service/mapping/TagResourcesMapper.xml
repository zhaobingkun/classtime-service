<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.classtime.service.dao.TagResourcesMapper">
    <resultMap id="BaseResultMap" type="com.classtime.service.model.TagResources">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tagid" property="tagid" jdbcType="BIGINT"/>
        <result column="resourcesid" property="resourcesid" jdbcType="BIGINT"/>
        <result column="sortnum" property="sortnum" jdbcType="INTEGER"/>

<!--        <association property="plan" column="resourcesid" javaType="com.classtime.service.model.Plan">
            <id column="a_id" property="id" jdbcType="BIGINT"/>
            <result column="a_name" property="name" jdbcType="VARCHAR"/>
        </association>-->
    </resultMap>
    <sql id="Base_Column_List">
    id, tagid, resourcesid,sortnum
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tag_resources
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tag_resources
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.classtime.service.model.TagResources">
    insert into tag_resources (id, tagid, resourcesid,sortnum)
    values (#{id,jdbcType=BIGINT}, #{tagid,jdbcType=BIGINT}, #{resourcesid,jdbcType=BIGINT}, #{sortnum,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.classtime.service.model.TagResources">
        insert into tag_resources
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tagid != null">
                tagid,
            </if>
            <if test="resourcesid != null">
                resourcesid,
            </if>
            <if test="sortnum != null">
                sortnum,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="tagid != null">
                #{tagid,jdbcType=BIGINT},
            </if>
            <if test="resourcesid != null">
                #{resourcesid,jdbcType=BIGINT},
            </if>
            <if test="sortnum != null">
                #{sortnum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.classtime.service.model.TagResources">
        update tag_resources
        <set>
            <if test="tagid != null">
                tagid = #{tagid,jdbcType=BIGINT},
            </if>
            <if test="resourcesid != null">
                resourcesid = #{resourcesid,jdbcType=BIGINT},
            </if>
            <if test="sortnum != null">
                sortnum= #{sortnum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.classtime.service.model.TagResources">
    update tag_resources
    set tagid = #{tagid,jdbcType=BIGINT},
      resourcesid = #{resourcesid,jdbcType=BIGINT},
      sortnum=#{sortnum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectBySelective" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from tag_resources
        <where>
            <if test="tagid != null">
                tagid = #{tagid,jdbcType=BIGINT}
            </if>
            <if test="resourcesid != null">
                and resourcesid = #{resourcesid,jdbcType=BIGINT}
            </if>
            <if test="sortnum != null">
                sortnum= #{sortnum,jdbcType=INTEGER}
            </if>
        </where>
        order by id desc
    </select>
<!--    <select id="selectByTagid" resultMap="BaseResultMap" parameterType="map">
        select t.id, t.sortnum, p.id,p.name, p.id as a_id,p.name as a_name
        from plan p,tag_resources t,tag
        where  t.tagid= #{tagid,jdbcType=BIGINT}
        and t.resourcesid = p.id
        order by t.sortnum asc,t.id desc
    </select>-->
</mapper>