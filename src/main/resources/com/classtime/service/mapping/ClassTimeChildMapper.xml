<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.classtime.service.dao.ClassTimeChildMapper" >
  <resultMap id="BaseResultMap" type="com.classtime.service.model.ClassTimeChild" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="classdatetime" property="classdatetime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />

      <association property="classTimeMain" column="m_id" javaType="classTimeMain">
          <id column="m_id" property="id" jdbcType="BIGINT"/>
          <id column="m_sid" property="sid" jdbcType="BIGINT"/>

          <result column="m_classname" property="classname" jdbcType="VARCHAR"/>
          <result column="m_classaddress" property="classaddress" jdbcType="VARCHAR"/>
      </association>


  </resultMap>
  <sql id="Base_Column_List" >
    id, mid, classdatetime, status,endtime,content
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from classtimechild
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from classtimechild
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.classtime.service.model.ClassTimeChild" >
    insert into classtimechild (id, mid, classdatetime,endtime
      status)
    values (#{id,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, #{classdatetime,jdbcType=TIMESTAMP},  #{endtime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.classtime.service.model.ClassTimeChild" >
    insert into classtimechild
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="classdatetime != null" >
        classdatetime,
    </if>

        <if test="endtime != null" >
            endtime,
        </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="classdatetime != null" >
        #{classdatetime,jdbcType=TIMESTAMP},
      </if>
        <if test="endtime != null" >
            #{endtime,jdbcType=TIMESTAMP},
        </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.classtime.service.model.ClassTimeChild" >
    update classtimechild
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="classdatetime != null" >
        classdatetime = #{classdatetime,jdbcType=TIMESTAMP},
      </if>

        <if test="endtime != null" >
            endtime = #{endtime,jdbcType=TIMESTAMP},
        </if>

      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.classtime.service.model.ClassTimeChild" >
    update classtimechild
    set mid = #{mid,jdbcType=INTEGER},
      classdatetime = #{classdatetime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <insert id="addCodeBatch" useGeneratedKeys="true" parameterType="java.util.List">


        insert into classtimechild (mid,classdatetime,endtime)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.mid},#{item.classdatetime},#{item.endtime})
        </foreach>

    </insert>



    <select id="selectByMainId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
      <!--  select
        <include refid="Base_Column_List" />
        from classtimechild
        where mid = #{mid,jdbcType=INTEGER}
-->

        SELECT
        m.id,m.classname,m.classaddress,c.id AS c_id,c.classdatetime AS c_classdatetime,c.classdatetime AS c_endtime
        FROM classtimemain m,classtimechild c
        WHERE  m.id = c.mid AND m.id = #{mid,jdbcType=INTEGER}

    </select>



    <select id="selectByMainIdByMonth" resultMap="BaseResultMap" parameterType="map" >

        SELECT
        m.id as m_id,m.sid as m_sid,m.classname as m_classname,m.classaddress as m_classaddress,c.id ,c.classdatetime
        FROM classtimemain m,classtimechild c

        WHERE  m.id = c.mid


            <if test="sid >0">
                AND  m.sid =  #{sid,jdbcType=INTEGER}
            </if>

            <if test="checkDate != null">
                and  DATE_FORMAT(c.classdatetime,'%Y-%m')=DATE_FORMAT(#{checkDate,jdbcType=VARCHAR},'%Y-%m')
            </if>

             ORDER BY c.classdatetime

        <!--
         SELECT
        m.id as m_id,m.classname as m_classname,m.classaddress as m_classaddress,c.id ,c.classdatetime
        FROM classtimemain m,classtimechild c
        WHERE  m.id = c.mid AND m.sid =  #{sid,jdbcType=INTEGER}  AND    DATE_FORMAT(c.classdatetime,'%Y-%m')=DATE_FORMAT('2016-12-10','%Y-%m')
        ORDER BY c.classdatetime
        -->
    </select>


    <select id="selectByMainIdByDay" resultMap="BaseResultMap" parameterType="map" >

        SELECT
        m.id as m_id,m.sid as m_sid,m.classname as m_classname,m.classaddress as m_classaddress,c.id ,c.classdatetime
        FROM classtimemain m,classtimechild c

        WHERE  m.id = c.mid


        <if test="sid >0">
            AND  m.sid =  #{sid,jdbcType=INTEGER}
        </if>

        <if test="checkDate != null">
            and  DATE_FORMAT(c.classdatetime,'%Y-%m-%d')=DATE_FORMAT(#{checkDate,jdbcType=VARCHAR},'%Y-%m-%d')
        </if>

        ORDER BY c.classdatetime

        <!--
         SELECT
        m.id as m_id,m.classname as m_classname,m.classaddress as m_classaddress,c.id ,c.classdatetime
        FROM classtimemain m,classtimechild c
        WHERE  m.id = c.mid AND m.sid =  #{sid,jdbcType=INTEGER}  AND    DATE_FORMAT(c.classdatetime,'%Y-%m')=DATE_FORMAT('2016-12-10','%Y-%m')
        ORDER BY c.classdatetime
        -->
    </select>
</mapper>